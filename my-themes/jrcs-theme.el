(deftheme jrcs
  "Created 2016-01-26.")

(custom-theme-set-faces
 'jrcs
 '(cursor ((t (:background "green"))))
 '(fixed-pitch ((t (:family "Monospace"))))
 '(variable-pitch ((t (:family "Sans Serif"))))
 '(escape-glyph ((t (:foreground "#c4a000"))))
 '(minibuffer-prompt ((t nil)))
 '(highlight ((t (:background "#27408b" :foreground "LightSalmon1"))))
 '(region ((t (:background "#203984"))))
 '(shadow ((((class color grayscale) (min-colors 88) (background light)) (:foreground "grey50")) (((class color grayscale) (min-colors 88) (background dark)) (:foreground "grey70")) (((class color) (min-colors 8) (background light)) (:foreground "green")) (((class color) (min-colors 8) (background dark)) (:foreground "yellow"))))
 '(secondary-selection ((t (:background "#204a87"))))
 '(trailing-whitespace ((t (:background "#a40000"))))
 '(flycheck-error ((t (:background "#700000" :underline (:color "firebrick1" :style wave)))))
 '(flycheck-warning ((t (:background "#002929" :underline (:color "orange" :style wave)))))
 '(font-lock-builtin-face ((t (:foreground "CadetBlue2"))))
 '(font-lock-comment-delimiter-face ((default (:inherit (font-lock-comment-face)))))
 '(font-lock-comment-face ((t (:foreground "#90ff90"))))
 '(font-lock-constant-face ((t (:foreground "#e9b2e3"))))
 '(font-lock-doc-face ((t (:inherit (font-lock-string-face)))))
 '(font-lock-function-name-face ((t (:foreground "#ffd000"))))
 '(font-lock-keyword-face ((t (:foreground "#ffff30"))))
 '(font-lock-negation-char-face ((t nil)))
 '(font-lock-preprocessor-face ((t (:inherit (font-lock-builtin-face)))))
 '(font-lock-regexp-grouping-backslash ((t (:inherit (bold)))))
 '(font-lock-regexp-grouping-construct ((t (:inherit (bold)))))
 '(font-lock-string-face ((t (:foreground "#FF9090"))))
 '(font-lock-type-face ((t (:foreground "turquoise1"))))
 '(font-lock-variable-name-face ((t (:foreground "moccasin"))))
 '(font-lock-warning-face ((t (:foreground "pink" :weight bold))))
 '(ido-first-match ((t (:foreground "chartreuse1"))))
 '(ido-only-match ((default (:inherit (ido-first-match)))))
 '(ido-subdir ((t (:foreground "goldenrod1"))))
 '(js2-error ((t (:inherit error))))
 '(js2-function-param ((t (:foreground "turquoise")))) 
 '(moccur-current-line-face ((t (:underline "LightSalmon1"))))
 '(moccur-edit-done-face ((t (:foreground "gray65"))))
 '(moccur-edit-file-face ((t (:background "gray30"))))
 '(moccur-face ((t (:background "yellow2" :foreground "Black"))))
 '(rpm-spec-doc-face ((t (:foreground "PaleVioletRed1"))))
 '(rpm-spec-ghost-face ((t (:foreground "#ff8585"))))
 '(rpm-spec-macro-face ((t (:foreground "moccasin" :weight bold))))
 '(rpm-spec-package-face ((t (:foreground "cyan"))))
 '(rpm-spec-section-face ((t (:foreground "greenyellow" :bold t :underline t))))
 '(rpm-spec-tag-face ((t (:foreground "Orange"))))
 '(rpm-spec-var-face ((t (:foreground "#ffff90"))))
 '(sh-escaped-newline ((t (:foreground "yellow"))))
 '(sh-heredoc ((t (:foreground "yellow"))))
 '(sh-quoted-exec ((t (:foreground "OliveDrab1"))))
 '(sh-variable-used ((t (:foreground "#ffa0ff"))))
 ;; mode-line
 '(mode-line ((t (:background "gray80" :foreground "black" :box (:line-width -1 :style released-button)))))
 '(mode-line-highlight ((((class color) (min-colors 88)) (:box (:line-width 2 :color "grey40" :style released-button))) (t (:inherit (highlight)))))
 '(mode-line-inactive ((t (:background "gray30" :foreground "gray85" :box (:line-width -1 :style released-button)))))
 '(mode-line-buffer-id ((t (:weight bold))))
 '(mode-line-emphasis ((t (:weight bold))))
 ;; powerline
 '(powerline-active1 ((t (:inherit mode-line :background "grey60"))))
 '(powerline-active2 ((t (:inherit mode-line :background "grey40"))))
 '(powerline-inactive1 ((t (:inherit mode-line-inactive :background "grey20"))))
 '(powerline-inactive2 ((t (:inherit mode-line-inactive :background "grey15"))))
 ;; spaceline
 '(spaceline-modified ((t (:inherit mode-line :background "DarkGoldenrod2"))))
 '(spaceline-read-only ((t (:inherit mode-line :background "#c3a073"))))
 '(spaceline-unmodified ((t (:inherit mode-line :background "#00b0b0"))))
 '(spaceline-flycheck-error ((t (:distant-foreground "#A20C41" :foreground "#c00000"))))
 '(spaceline-flycheck-warning ((t (:distant-foreground "#968B26" :foreground "#662E13"))))
 '(button ((t (:inherit (link)))))
 '(fringe ((t (:background "#212526"))))
 '(header-line ((default (:inherit (mode-line))) (((type tty)) (:underline (:color foreground-color :style line) :inverse-video nil)) (((class color grayscale) (background light)) (:box nil :foreground "grey20" :background "grey90")) (((class color grayscale) (background dark)) (:box nil :foreground "grey90" :background "grey20")) (((class mono) (background light)) (:underline (:color foreground-color :style line) :box nil :inverse-video nil :foreground "black" :background "white")) (((class mono) (background dark)) (:underline (:color foreground-color :style line) :box nil :inverse-video nil :foreground "white" :background "black"))))
 '(tooltip ((((class color)) (:inherit (variable-pitch) :foreground "black" :background "lightyellow")) (t (:inherit (variable-pitch)))))
 '(magit-hash ((t (:foreground "SeaGreen1"))))
 '(magit-section-highlight ((t (:background "#27408b"))))
 '(isearch ((t (:background "yellow" :foreground "black"))))
 '(isearch-fail ((t (:background "firebrick1"))))
 '(lazy-highlight ((t (:background "blue" :foreground "white"))))
 '(match ((((class color) (min-colors 88) (background light)) (:background "yellow1")) (((class color) (min-colors 88) (background dark)) (:background "RoyalBlue3")) (((class color) (min-colors 8) (background light)) (:foreground "black" :background "yellow")) (((class color) (min-colors 8) (background dark)) (:foreground "white" :background "blue")) (((type tty) (class mono)) (:inverse-video t)) (t (:background "gray"))))
 '(show-paren-match ((t (:background "blue"))))
 '(show-paren-mismatch ((t (:background "dark magenta" :foreground "white"))))
 '(next-error ((t (:inherit (region)))))
 '(query-replace ((t (:inherit (isearch)))))
 '(default ((t (:inherit nil :stipple nil :background "#004444" :foreground "white" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 125 :width normal :family "Fixed"))))
 '(error ((t (:foreground "tomato" :weight bold))))
 '(link ((t (:underline (:color foreground-color :style line) :foreground "SteelBlue1"))))
 '(link-visited ((t (:underline (:color foreground-color :style line) :foreground "SteelBlue3")))))

(provide-theme 'jrcs)
